project:
  name: '@project.artifactId@'
  version: '@project.version@'
  description: '@project.description@'

info:
  build:
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: '@project.description@'
    version: '@project.version@'

application:
  title: ${project.name}
  version: ${project.version}

spring:
  output:
    ansi:
      enabled: ${SPRING_OUTPUT_ANSI_ENABLE}
  banner:
    charset: ${SPRING_BANNER_CHARSET}
    location: ${SPRING_BANNER_LOCATION}

  jpa:
    database: ${JPA_DATABASE}
    database-platform: ${JPA_DATABASE_PLATFORM}
    open-in-view: ${JPA_OPEN_IN_VIEW}
    show-sql: ${JPA_SHOW_SQL} #Opcao para apresentar a execucao de SQL no projeto.
    generate-ddl: ${JPA_GENERATE_DDL} #Cria DDDL (Crias a instrucoes de criacao/alteracao de tabela)
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        jdbc:
          batch_size: ${JPA_HIBERNATE_JDBC_BATCH_SIZE}
        cache:
          use_query_cache: ${JPA_HIBERNATE_CACHE_USE_QUERY_CACHE}
          use_second_level_cache: ${JPA_HIBERNATE_CACHE_USE_SECOND_LEVEL_CACHE}
          use_structured_entries: ${JPA_HIBERNATE_CACHE_USE_ENTRIES}
          use_minimal_puts: ${JPA_HIBERNATE_CACHE_USE_MINIMAL_PUTS}

  # Database
  datasource:
    driver-class-name: ${DS_DRIVER_CLASS_NAME}
    url: ${DS_URL}
    username: ${DS_USER}
    password: ${DS_PASSWORD}

  flyway:
    baseline-on-migrate: ${FLYWAY_BASELINE_MIGRATE}
    validate-on-migrate: ${FLYWAY_VALIDATE_MIGRATE}

#Logging
logging:
  level:
    br.edu.ipog.backend3.rh: info
    org.springframework.web: info
    org:
      hibernate.type: info #Qualquer parâmetro que houver na instrução SQL será exibido no console.